 let starttime = 30d;
 let timeframe = 1d;
 let scorethreshold = 3;
 let baselinethreshold = 10;
 let TimeSeriesData = SecurityEvent
| where TimeGenerated between (ago(starttime)..now())
| where EventID == 4662 and AccountType=="Machine"
| where Account endswith "$" 
| where Properties has "{1131f6ad-9c07-11d1-f79f-00c04fc2dcd2}"
 or Properties has "{1131f6aa-9c07-11d1-f79f-00c04fc2dcd2}"
 or Properties has "{19195a5b-6da0-11d0-afd3-00c04fd930c9}"
 | make-series DailyCount=count() on TimeGenerated from startofday(ago(starttime)) to startofday(now()) step timeframe by SourceComputerId;
 //Filter anomalies against TimeSeriesData
 let TimeSeriesAlerts = TimeSeriesData
 | extend (anomalies, score, baseline) = series_decompose_anomalies(DailyCount, scorethreshold, -1, 'linefit')
 | mv-expand DailyCount to typeof(double), TimeGenerated to typeof(datetime), anomalies to typeof(double),score to typeof(double), baseline to typeof(long)
 | where anomalies > 0 | extend AnomalyDay = TimeGenerated
 | where baseline > baselinethreshold // Filtering low count events per baselinethreshold
 | project SourceComputerId, AnomalyDay, TimeGenerated, DailyCount, baseline, anomalies, score;
 // Computers with unusual spike in 4662 events per TimeSeries anaomaly
 let AnomalousSourceComputers4662 = TimeSeriesAlerts | distinct SourceComputerId;
SecurityEvent
| where TimeGenerated between (ago(starttime)..now())
| where EventID == 4662 and AccountType=="Machine"
| where Account endswith "$" 
| where Properties has "{​​​​​1131f6ad-9c07-11d1-f79f-00c04fc2dcd2}​​​​​"
 or Properties has "{​​​​​1131f6aa-9c07-11d1-f79f-00c04fc2dcd2}​​​​​"
 or Properties has "{​​​​​19195a5b-6da0-11d0-afd3-00c04fd930c9}​​​​​"
 | where SourceComputerId in ((AnomalousSourceComputers4662)) // Filtering for computers with anamalous spike in 4662
 | join (
 SecurityEvent
 | where TimeGenerated >= ago(timeframe)
 | where EventID == 4624
 | where LogonType == 3
 | project EventID, LogonType, Activity, TargetLogonId, IpAddress, SourceComputerId
 ) on $left.SubjectLogonId == $right.TargetLogonId
| project TimeGenerated, Account, Computer, IpAddress, LogonType, Activity, Properties, SourceComputerId


